id,category,title,description,high_score,low_score,more_info_link,important,seq
1,Dev Practices,Documentation,How good are your docs? How trusted are they?,Our docs are updated regularly and are accurate,"Documentation is poor, out of date or non-existant",,,1
2,Dev Practices,IaC,How much do you follow Infrastructure as Code practices,We use versioned and tested IaC for all our deployments.  It is kept alongside the code or in a dedicated and well documented repo.  Manual processes are far and few-between and well documneted,Our deployments are full on manual ClickOps,,,
3,Dev Practices,QA and confidence,How easy is it to provide confidence that the changes that are made are correct (technically and functionally),We have multiple assurance steps of differing types run in multiple environments as part of our CI & CD processes.  We use fault injection to find areas of weakness to improve,"""We only have basic unit or """"integration tests"""" in place""",,,
4,Observability,Service status,How do we display the current service/system status to ops teams and business stakeholders,We build a dashboard in collaboration with the operations and business teams. UX is a key consideration,Operations teams tend to discover the status indicators themselves,,,1
5,Deployments,Service KPIs/SLOs,How do we track the main service/system Key Performance Indicators (KPIs) or Service Level Objectives (SLOs)? What are the KPIs/SLOs?,We emit service KPIs/SLIs for each of our components that are picked up by a dashboard/alerting mechanism.  We review and optimise for them constantly,We do not have Service KPIs/SLOs defined,,,1
6,Deployments,Blue-Green,Any mechanism to test a new version alongside an existing version when necessary,"We use fine-grained blue-green deployment techniques, at the level of individual services",We do not use any blue-green deployment techniques,,,1
7,Deployments,Automated config,Config should always be performed by an automated process using values from your configuration repository,All config is done using scripts,Many of our applications are configure manually each time,,,1
8,Deployments,Environment history,It should be possible to clearly see a history and log of changes made to our environments,We have a nice dashboard of deployments and their impact,It is difficult to see the history of changes in an environment,,,1
9,Availability,Service KPIs/SLOs,How do we track the main service/system Key Performance Indicators (KPIs) or Service Level Objectives (SLOs)? What are the KPIs/SLOs?,We emit service KPIs/SLIs for each of our components that are picked up by a dashboard/alerting mechanism.  We review and optimise for them constantly,We do not have Service KPIs/SLOs defined,,,1
10,Availability,Service restoration and DR,How do we keep things up and running: Can you recover quickly from incidents a low MTTR? Can you detect incidents ahead of time? Can you failover to backup systems,We have fully adopted SRE practices across the board. We continuously monitor and improve on your numbers,Little to no availability practices,,,1
11,Availability,Observability,"How much observability do you have on your systems environments, inputs, outputs and behaviour. Do you have enough information on how your system runs to make improvements/solve problems?","Just the basics you get for free from Cloudwatch, an on-server agent, htop, task manager etc.",Max Instrumentation and SLO driven dashboards,,,1
12,Availability,Run without you,"If all of your team took some time off, how long would your systems keep running without you?",Our prod env will run for weeks without interference and self-heal.  We have evegreen well tested runbooks for all critical services,Everything will fall on it's face within a day without our heroics,,,1
13,Culture,Path to production,How easy is it to release the software that you work to production,It's easy and straightforward to release my changes,It's very difficult to release and takes a long time,,,2
14,Culture,Learning,How much do you learn as a team?,We learn something every day,We rarely learn something new,,,1
15,Culture,Definition of done,Done means released into production and not causing problems,Done means that the changes are deployed to prod with monitoring to ensure it has not broken anything,Our definition of done is a bit wishy-washy and means “feature tests have passed”,,,1
16,Culture,Onboarding,How easy is it to onboard members to your team and make them productive,New team members can spin up a environment quickly and commit to production < 3 weeks,"It can take a few months before a team member can actively contribute

It takes a long time to discover all the codebases and environments",,,
17,Tech,Failure modes,How can we see and share the different known failure modes (failure scenarios) for the system?,We use a set of error identifiers to define the failure modes in our software and we use these identifiers in our log messages,We do not relaly know how the system might fail,,,1
18,Flow,Deployment frequency,How often does your team deploy to Production?,Every 2 days or less,Every 2 weeks or longer in practice,,,1
19,Infra,Impact assessment,How well do you understand the outcome / effect of the change ?,Our team is invovled very early in the conversations and we know how we will measure the impact  ,We are normally told at the last minute,,,