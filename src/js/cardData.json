[
  {
    "id": 1,
    "slug": "dev-practices",
    "vote-jujhar": null,
    "vote-lucy": "L",
    "vote-andrew": null,
    "vote-rajatha": null,
    "category": "Dev Practices",
    "title": "Config deployment",
    "description": "How easy is to deploy/inject a configuration change",
    "high_score": "We can run the majority of config changes independently of our code release.  All changes are auditable and revertable",
    "low_score": "We have to manual changes",
    "more_info_link": null,
    "important": null,
    "seq": 1
  },
  {
    "id": 2,
    "slug": "dev-practices",
    "vote-jujhar": null,
    "vote-lucy": null,
    "vote-andrew": null,
    "vote-rajatha": null,
    "category": "Dev Practices",
    "title": "Feature Coverage",
    "description": "What proportion of the features are covered by a test",
    "high_score": "Every one of our features is covered by at least one test",
    "low_score": "Less than 25% of our features have corresponding tests",
    "more_info_link": null,
    "important": null,
    "seq": 1
  },
  {
    "id": 3,
    "slug": "dev-practices",
    "vote-jujhar": null,
    "vote-lucy": null,
    "vote-andrew": "A",
    "vote-rajatha": null,
    "category": "Dev Practices",
    "title": "Spend on Operability",
    "description": "What proportion of product budget and team effort is spent on operational aspects? How do you track this?",
    "high_score": "We spend our 30% of our time and budget on addressing operational aspects?",
    "low_score": "We try to spend as little as possible on operational aspects / we do not track spend on operational aspects?",
    "more_info_link": null,
    "important": null,
    "seq": 1
  },
  {
    "id": 4,
    "slug": "dev-practices",
    "vote-jujhar": null,
    "vote-lucy": "L",
    "vote-andrew": null,
    "vote-rajatha": null,
    "category": "Dev Practices",
    "title": "Testability",
    "description": "How do we show that the software system is easy to test? What do we provide and to whom?",
    "high_score": "We run clients and external test packs against all parts of our software within our development pipeline.",
    "low_score": "We do not explicitly aim to make our software easily testable.",
    "more_info_link": null,
    "important": null,
    "seq": 1
  },
  {
    "id": 5,
    "slug": "dev-practices",
    "vote-jujhar": "J",
    "vote-lucy": "L",
    "vote-andrew": null,
    "vote-rajatha": null,
    "category": "Dev Practices",
    "title": "Other Code",
    "description": "How confident are you in the code from other internal teams that you depend on",
    "high_score": "We are confident in our colleagues code, their docs are clear and coverage is rock solid",
    "low_score": "Code from other teams is really flakey and we have to reach out often to try and understand their interfaces",
    "more_info_link": null,
    "important": null,
    "seq": 1
  },
  {
    "id": 6,
    "slug": "dev-practices",
    "vote-jujhar": null,
    "vote-lucy": null,
    "vote-andrew": null,
    "vote-rajatha": null,
    "category": "Dev Practices",
    "title": "Test Data",
    "description": "How do you get your test data?",
    "high_score": "All our test data is generated from scripts and injected into the data stores",
    "low_score": "We have manual processes for setting up test data for environments",
    "more_info_link": null,
    "important": null,
    "seq": 1
  },
  {
    "id": 7,
    "slug": "dev-practices",
    "vote-jujhar": null,
    "vote-lucy": "L",
    "vote-andrew": null,
    "vote-rajatha": null,
    "category": "Dev Practices",
    "title": "Deployment code",
    "description": "How is your deployment code structured?  Do you have tests for your deployment pipeline code",
    "high_score": "We have deployment verification tests for key parts of our build and automation suite.  The code is modular and well structured",
    "low_score": "We do not test our build and deployment code, it’s just a handful of scritps",
    "more_info_link": null,
    "important": null,
    "seq": 1
  },
  {
    "id": 8,
    "slug": "dev-practices",
    "vote-jujhar": "J",
    "vote-lucy": null,
    "vote-andrew": "A",
    "vote-rajatha": null,
    "category": "Dev Practices",
    "title": "Documentation",
    "description": "How good are your docs? How trusted are they?",
    "high_score": "Our docs are updated regularly and are accurate",
    "low_score": "Documentation is poor, out of date or non-existant",
    "more_info_link": null,
    "important": null,
    "seq": 1
  },
  {
    "id": 9,
    "slug": "dev-practices",
    "vote-jujhar": "J",
    "vote-lucy": "L",
    "vote-andrew": "A",
    "vote-rajatha": null,
    "category": "Dev Practices",
    "title": "QA and Confidence",
    "description": "How easy is it to provide confidence that the changes that are made are correct (technically and functionally)",
    "high_score": "We have multiple assurance steps of differing types run in multiple environments as part of our CI & CD processes",
    "low_score": "\"We only have basic unit or \"\"integration tests\"\" in place\"",
    "more_info_link": null,
    "important": null,
    "seq": null
  },
  {
    "id": 10,
    "slug": "dev-practices",
    "vote-jujhar": "J",
    "vote-lucy": "L",
    "vote-andrew": "A",
    "vote-rajatha": null,
    "category": "Dev Practices",
    "title": "Sensible Defaults",
    "description": "Do you follow sensible defaults/golden path/tech radar",
    "high_score": "We have/know about sensible defaults and we follow them as best we can\nWe use technology off <org>'s golden-path/menu",
    "low_score": "We don't know about sensible defaults\nWe often ignore the golden-path",
    "more_info_link": null,
    "important": null,
    "seq": null
  },
  {
    "id": 11,
    "slug": "observability",
    "vote-jujhar": null,
    "vote-lucy": null,
    "vote-andrew": null,
    "vote-rajatha": null,
    "category": "Observability",
    "title": "Feature Toggles Observability",
    "description": "How do we know which feature toggles are active for a deployments?",
    "high_score": "We have a simple UI or API to see what's on in which environment",
    "low_score": "We track things manually on paper or in our heads",
    "more_info_link": null,
    "important": null,
    "seq": 1
  },
  {
    "id": 12,
    "slug": "observability",
    "vote-jujhar": "J",
    "vote-lucy": "L",
    "vote-andrew": "A",
    "vote-rajatha": null,
    "category": "Observability",
    "title": "Full stack Observability",
    "description": "Do you have multiple views of the entire stack's telemetry?",
    "high_score": "We can see through the entire stack from the metal all the way up to the UI issues and performance",
    "low_score": "We can only see one or two layers and don't really tie them together to tell a story",
    "more_info_link": "https://devsecops.jujhar.com/observability-strategy/",
    "important": null,
    "seq": 1
  },
  {
    "id": 13,
    "slug": "observability",
    "vote-jujhar": "J",
    "vote-lucy": "L",
    "vote-andrew": null,
    "vote-rajatha": null,
    "category": "Observability",
    "title": "Hardware insights",
    "description": "How much insight do we have into the behaviour of our infra/deployment fabric",
    "high_score": "We can tell you the CPU, RAM, NetworkIO & DiskIO for all our hardware in granular detail.  We can enumerate our hardware in detail and know which OS/CPU etc we’re running on",
    "low_score": "We only have very rough measures of our hardware performance",
    "more_info_link": null,
    "important": null,
    "seq": 1
  },
  {
    "id": 14,
    "slug": "observability",
    "vote-jujhar": "J",
    "vote-lucy": null,
    "vote-andrew": null,
    "vote-rajatha": null,
    "category": "Observability",
    "title": "Logging Working",
    "description": "How do we know that logging is working correctly?",
    "high_score": "We test logging using tests that search for specific log message strings in the central log aggregation/search system",
    "low_score": "We do not test if logging is working",
    "more_info_link": null,
    "important": null,
    "seq": 1
  },
  {
    "id": 15,
    "slug": "observability",
    "vote-jujhar": "J",
    "vote-lucy": "L",
    "vote-andrew": "A",
    "vote-rajatha": null,
    "category": "Observability",
    "title": "System Health",
    "description": "How do we know that the system is healthy (or unhealthy)?",
    "high_score": "We query the software using a standard http healthcheck URL and synthetic transactions for key scenarios",
    "low_score": "We wait for checks made manually by another team to tell us if our software is healthy",
    "more_info_link": null,
    "important": null,
    "seq": 1
  },
  {
    "id": 16,
    "slug": "observability",
    "vote-jujhar": "J",
    "vote-lucy": "L",
    "vote-andrew": null,
    "vote-rajatha": null,
    "category": "Observability",
    "title": "Service Status",
    "description": "How do we display the current service/system status to ops teams and business stakeholders",
    "high_score": "We build a dashboard in collaboration with the operations and business teams. UX is a key consideration",
    "low_score": "Operations teams tend to discover the status indicators themselves",
    "more_info_link": null,
    "important": null,
    "seq": 1
  },
  {
    "id": 18,
    "slug": "deployments",
    "vote-jujhar": "J",
    "vote-lucy": "L",
    "vote-andrew": "A",
    "vote-rajatha": null,
    "category": "Deployments",
    "title": "CI/CD Speed and Stability",
    "description": "CI/CD processes are fast and stable",
    "high_score": "The CI/CD pipelines are super fast and we get feedback on our software on almost real-time basis",
    "low_score": "CI/CD takes so long to do or is very fragile and we end up losing big chunks of our day to it.",
    "more_info_link": null,
    "important": null,
    "seq": 1
  },
  {
    "id": 19,
    "slug": "deployments",
    "vote-jujhar": "J",
    "vote-lucy": "L",
    "vote-andrew": "A",
    "vote-rajatha": null,
    "category": "Deployments",
    "title": "Blue-Green",
    "description": "Any mechanism to test a new version alongside an existing version when necessary",
    "high_score": "We use fine-grained blue-green deployment techniques, at the level of individual services",
    "low_score": "We do not use any blue-green deployment techniques",
    "more_info_link": null,
    "important": null,
    "seq": 1
  },
  {
    "id": 20,
    "slug": "deployments",
    "vote-jujhar": null,
    "vote-lucy": null,
    "vote-andrew": null,
    "vote-rajatha": null,
    "category": "Deployments",
    "title": "Idempotency - Redploying the app",
    "description": "What would happen if we decided to redeploy the application even though nothing has changed",
    "high_score": "No worries",
    "low_score": "We don’t know what would happen, the deployments are flakey",
    "more_info_link": null,
    "important": null,
    "seq": 1
  },
  {
    "id": 21,
    "slug": "deployments",
    "vote-jujhar": null,
    "vote-lucy": "L",
    "vote-andrew": null,
    "vote-rajatha": null,
    "category": "Deployments",
    "title": "Rerun tests",
    "description": "What would happen if we decided to rerun the test suite multiple times",
    "high_score": "No worries",
    "low_score": "We don’t know what would happen, the test suite is flakey",
    "more_info_link": null,
    "important": null,
    "seq": 1
  },
  {
    "id": 22,
    "slug": "deployments",
    "vote-jujhar": "J",
    "vote-lucy": "L",
    "vote-andrew": null,
    "vote-rajatha": null,
    "category": "Deployments",
    "title": "Fresh config",
    "description": "What would happen if we decided to delete the config and redeploy it",
    "high_score": "No worries, the application would behave as it did before",
    "low_score": "It’s very likely the app would behave differently as there’s a lot of manual changes",
    "more_info_link": null,
    "important": null,
    "seq": 1
  },
  {
    "id": 23,
    "slug": "deployments",
    "vote-jujhar": "J",
    "vote-lucy": "L",
    "vote-andrew": null,
    "vote-rajatha": null,
    "category": "Deployments",
    "title": "Automated config",
    "description": "Config should always be performed by an automated process using values from your configuration repository",
    "high_score": "All config is done using scripts",
    "low_score": "Many of our applications are configure manually each time",
    "more_info_link": null,
    "important": null,
    "seq": 1
  },
  {
    "id": 24,
    "slug": "availability",
    "vote-jujhar": "J",
    "vote-lucy": null,
    "vote-andrew": null,
    "vote-rajatha": null,
    "category": "Availability",
    "title": "MTTR",
    "description": "How long does it take you to restore service in the case of an incident",
    "high_score": "We track our MTTR across the board and can restore in <10 mins on average",
    "low_score": "We measure repair in days and we do not track this properly",
    "more_info_link": "https://en.wikipedia.org/wiki/Mean_time_to_repair",
    "important": null,
    "seq": 1
  },
  {
    "id": 25,
    "slug": "availability",
    "vote-jujhar": "J",
    "vote-lucy": "L",
    "vote-andrew": null,
    "vote-rajatha": null,
    "category": "Availability",
    "title": "Service KPIs",
    "description": "How do we track the main service/system Key Performance Indicators (KPIs)? What are the KPIs?",
    "high_score": "We use logging and/or time series metrics to emit service KPIs that are picked up by a dashboard",
    "low_score": "We do not have Service KPIs defined",
    "more_info_link": null,
    "important": null,
    "seq": 1
  },
  {
    "id": 26,
    "slug": "availability",
    "vote-jujhar": "J",
    "vote-lucy": null,
    "vote-andrew": null,
    "vote-rajatha": null,
    "category": "Availability",
    "title": "Service Restoration",
    "description": "How do we keep things up and running: Can you recover quickly from incidents a low MTTR? Can you detect incidents ahead of time? Can you failover to backup systems",
    "high_score": "We have fully adopted SRE practices across the board. We continuously monitor and improve on your numbers",
    "low_score": "Little to no availability practices",
    "more_info_link": null,
    "important": null,
    "seq": 1
  },
  {
    "id": 27,
    "slug": "availability",
    "vote-jujhar": null,
    "vote-lucy": null,
    "vote-andrew": null,
    "vote-rajatha": null,
    "category": "Availability",
    "title": "Observability",
    "description": "How much observability do you have on your systems environments, inputs, outputs and behaviour. Do you have enough information on how your system runs to make improvements/solve problems?",
    "high_score": "Just the basics you get for free from Cloudwatch, an on-server agent, htop, task manager etc.",
    "low_score": "Max Instrumentation and SLO driven dashboards",
    "more_info_link": null,
    "important": null,
    "seq": 1
  },
  {
    "id": 28,
    "slug": "availability",
    "vote-jujhar": "J",
    "vote-lucy": null,
    "vote-andrew": null,
    "vote-rajatha": null,
    "category": "Availability",
    "title": "Run without you",
    "description": "If all of your team took some time off, how long would your systems keep running without you?",
    "high_score": "Our prod env will run for weeks without interference and self-heal",
    "low_score": "Everything will fall on it's face within a day without our heroics",
    "more_info_link": null,
    "important": null,
    "seq": 1
  },
  {
    "id": 30,
    "slug": "culture",
    "vote-jujhar": null,
    "vote-lucy": "L",
    "vote-andrew": null,
    "vote-rajatha": null,
    "category": "Culture",
    "title": "Path to production",
    "description": "How easy is it to release the software that you work to production",
    "high_score": "It's easy and straightforward to release my changes",
    "low_score": "It's very difficult to release and takes a long time",
    "more_info_link": null,
    "important": null,
    "seq": 2
  },
  {
    "id": 31,
    "slug": "culture",
    "vote-jujhar": null,
    "vote-lucy": "L",
    "vote-andrew": "A",
    "vote-rajatha": null,
    "category": "Culture",
    "title": "Mission",
    "description": "How well do you know why you are working on things?",
    "high_score": "We have a clear mission that we are with all stakeholders",
    "low_score": "It is rarely clear what our mission is",
    "more_info_link": null,
    "important": null,
    "seq": 1
  },
  {
    "id": 32,
    "slug": "culture",
    "vote-jujhar": null,
    "vote-lucy": null,
    "vote-andrew": null,
    "vote-rajatha": null,
    "category": "Culture",
    "title": "Learning",
    "description": "How much do you learn as a team?",
    "high_score": "We learn something every day",
    "low_score": "We rarely learn something new",
    "more_info_link": null,
    "important": null,
    "seq": 1
  },
  {
    "id": 33,
    "slug": "culture",
    "vote-jujhar": null,
    "vote-lucy": "L",
    "vote-andrew": null,
    "vote-rajatha": null,
    "category": "Culture",
    "title": "Done",
    "description": "Done means released into production and not causing problems",
    "high_score": "Done means that the changes are deployed to prod with monitoring to ensure it has not broken anything",
    "low_score": "Our definition of done is a bit wishy-washy and means “feature tests have passed”",
    "more_info_link": null,
    "important": null,
    "seq": 1
  },
  {
    "id": 34,
    "slug": "culture",
    "vote-jujhar": null,
    "vote-lucy": "L",
    "vote-andrew": "A",
    "vote-rajatha": null,
    "category": "Culture",
    "title": "Collaboration",
    "description": "How do we collaborate on operations aspects of the systems such as logging, monitoring, alerting and NFRs",
    "high_score": "We collaboratee on operational aspects from the very first week of the project",
    "low_score": "We respond after go-live wheen the tickets are raised by the live ops and service teams",
    "more_info_link": null,
    "important": null,
    "seq": 1
  },
  {
    "id": 35,
    "slug": "culture",
    "vote-jujhar": null,
    "vote-lucy": null,
    "vote-andrew": null,
    "vote-rajatha": null,
    "category": "Culture",
    "title": "Our tools are cool",
    "description": "Do you feel that your tools, hardware and software are up to scratch",
    "high_score": "We love our tools and can solve any problem with them",
    "low_score": "My machine is so slow and crashes all the time, to install any software I have to submit a ticket",
    "more_info_link": null,
    "important": null,
    "seq": 1
  },
  {
    "id": 36,
    "slug": "culture",
    "vote-jujhar": "J",
    "vote-lucy": null,
    "vote-andrew": "A",
    "vote-rajatha": null,
    "category": "Culture",
    "title": "Onboarding",
    "description": "How easy is it to onboard members to your team and make them productive",
    "high_score": "New team members can spin up a environment quickly and commit to production < 3 weeks",
    "low_score": "It can take a few months before a team member can actively contribute\n\nIt takes a long time to discover all the codebases and environments",
    "more_info_link": null,
    "important": null,
    "seq": null
  },
  {
    "id": 37,
    "slug": "culture",
    "vote-jujhar": "J",
    "vote-lucy": null,
    "vote-andrew": null,
    "vote-rajatha": null,
    "category": "Culture",
    "title": "What happens in case of failure/incident?",
    "description": null,
    "high_score": "We work through the situation together.\nWe discuss the issue in depth\nWe work out the best way to prevent/mitigate in future",
    "low_score": "We discuss the issue but nothing changes\nThe person/team could get in trouble or is blamed\nNo investment is made in paying down tech debt",
    "more_info_link": null,
    "important": null,
    "seq": null
  },
  {
    "id": 38,
    "slug": "tech",
    "vote-jujhar": "J",
    "vote-lucy": "L",
    "vote-andrew": "A",
    "vote-rajatha": null,
    "category": "Tech",
    "title": "Delivery Platform",
    "description": "How effective and easy to use is the delivery platform underpinning your team's delivery?",
    "high_score": "The platform is a force multiplier and helps us deliver rapidly and safely. We love the platform.",
    "low_score": "The platform seems to obstruct us and is difficult to use",
    "more_info_link": null,
    "important": null,
    "seq": 1
  },
  {
    "id": 39,
    "slug": "tech",
    "vote-jujhar": "J",
    "vote-lucy": null,
    "vote-andrew": null,
    "vote-rajatha": null,
    "category": "Tech",
    "title": "Stubs",
    "description": "Simulate external systems. Treat almost every other system as 'external'",
    "high_score": "The stubs we consume and write are good quality and give us a degree of confidence that our tests are working well.",
    "low_score": "There are few stubs available and we do noot have enough time to write stubs ourselves.",
    "more_info_link": null,
    "important": null,
    "seq": 1
  },
  {
    "id": 40,
    "slug": "tech",
    "vote-jujhar": "J",
    "vote-lucy": "L",
    "vote-andrew": "A",
    "vote-rajatha": null,
    "category": "Tech",
    "title": "Call Tracing",
    "description": "How do we trace a call/request end-to-end through the system?",
    "high_score": "We use a standard tracing library to trace calls through the system. Tracing fields are maintained across component boundaries",
    "low_score": "We do not trace calls through the system and have to piece the info together by hand",
    "more_info_link": null,
    "important": null,
    "seq": 1
  },
  {
    "id": 41,
    "slug": "tech",
    "vote-jujhar": "J",
    "vote-lucy": "L",
    "vote-andrew": "A",
    "vote-rajatha": null,
    "category": "Tech",
    "title": "Performance",
    "description": "How do we know that the system/service performs within acceptable ranges?",
    "high_score": "We run a set of indicative performances tests within our deployment pipeline that are run on every check-in to version control.",
    "low_score": "We rely solely on the performance team to validate the performance of our application or service.",
    "more_info_link": null,
    "important": null,
    "seq": 1
  },
  {
    "id": 42,
    "slug": "tech",
    "vote-jujhar": "J",
    "vote-lucy": "L",
    "vote-andrew": null,
    "vote-rajatha": null,
    "category": "Tech",
    "title": "Failure Modes",
    "description": "How can we see and share the different known failure modes (failure scenarios) for the system?",
    "high_score": "We use a set of error identifiers to define the failure modes in our software and we use these identifiers in our log messages",
    "low_score": "We do not relaly know how the system might fail",
    "more_info_link": null,
    "important": null,
    "seq": 1
  },
  {
    "id": 43,
    "slug": "flow",
    "vote-jujhar": null,
    "vote-lucy": "L",
    "vote-andrew": null,
    "vote-rajatha": null,
    "category": "Flow",
    "title": "Failed Changes",
    "description": "What proportion of changes to your application or service in Production fail or need remediation? (This is typically the number of failed deployments)",
    "high_score": "Less than 5% of our changes / deployments fail in Production",
    "low_score": "More than 20% of our changes / deployments fail in Production",
    "more_info_link": null,
    "important": null,
    "seq": 1
  },
  {
    "id": 44,
    "slug": "flow",
    "vote-jujhar": null,
    "vote-lucy": null,
    "vote-andrew": "A",
    "vote-rajatha": null,
    "category": "Flow",
    "title": "Innovation and Improvements",
    "description": "How well are you able to innovate around delivery approaches?",
    "high_score": "We make our reserve time for innovation and process improvements every week and track changes as part of our team metrics",
    "low_score": "We do not have time to innovate",
    "more_info_link": null,
    "important": null,
    "seq": 1
  }
]
