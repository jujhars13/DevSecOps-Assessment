/*! For license information please see main.js.LICENSE.txt */
(()=>{"use strict";const e=JSON.parse('[{"id":1,"slug":"dev-practices","vote-jujhar":null,"vote-lucy":"L","vote-andrew":null,"vote-rajatha":null,"category":"Dev Practices","title":"Config deployment","description":"How easy is to deploy/inject a configuration change","high_score":"We can run the majority of config changes independently of our code release.  All changes are auditable and revertable","low_score":"We have to manual changes","more_info_link":null,"important":null,"seq":1},{"id":2,"slug":"dev-practices","vote-jujhar":null,"vote-lucy":null,"vote-andrew":null,"vote-rajatha":null,"category":"Dev Practices","title":"Feature Coverage","description":"What proportion of the features are covered by a test","high_score":"Every one of our features is covered by at least one test","low_score":"Less than 25% of our features have corresponding tests","more_info_link":null,"important":null,"seq":1},{"id":3,"slug":"dev-practices","vote-jujhar":null,"vote-lucy":null,"vote-andrew":"A","vote-rajatha":null,"category":"Dev Practices","title":"Spend on Operability","description":"What proportion of product budget and team effort is spent on operational aspects? How do you track this?","high_score":"We spend our 30% of our time and budget on addressing operational aspects?","low_score":"We try to spend as little as possible on operational aspects / we do not track spend on operational aspects?","more_info_link":null,"important":null,"seq":1},{"id":4,"slug":"dev-practices","vote-jujhar":null,"vote-lucy":"L","vote-andrew":null,"vote-rajatha":null,"category":"Dev Practices","title":"Testability","description":"How do we show that the software system is easy to test? What do we provide and to whom?","high_score":"We run clients and external test packs against all parts of our software within our development pipeline.","low_score":"We do not explicitly aim to make our software easily testable.","more_info_link":null,"important":null,"seq":1},{"id":5,"slug":"dev-practices","vote-jujhar":"J","vote-lucy":"L","vote-andrew":null,"vote-rajatha":null,"category":"Dev Practices","title":"Other Code","description":"How confident are you in the code from other internal teams that you depend on","high_score":"We are confident in our colleagues code, their docs are clear and coverage is rock solid","low_score":"Code from other teams is really flakey and we have to reach out often to try and understand their interfaces","more_info_link":null,"important":null,"seq":1},{"id":6,"slug":"dev-practices","vote-jujhar":null,"vote-lucy":null,"vote-andrew":null,"vote-rajatha":null,"category":"Dev Practices","title":"Test Data","description":"How do you get your test data?","high_score":"All our test data is generated from scripts and injected into the data stores","low_score":"We have manual processes for setting up test data for environments","more_info_link":null,"important":null,"seq":1},{"id":7,"slug":"dev-practices","vote-jujhar":null,"vote-lucy":"L","vote-andrew":null,"vote-rajatha":null,"category":"Dev Practices","title":"Deployment code","description":"How is your deployment code structured?  Do you have tests for your deployment pipeline code","high_score":"We have deployment verification tests for key parts of our build and automation suite.  The code is modular and well structured","low_score":"We do not test our build and deployment code, it’s just a handful of scritps","more_info_link":null,"important":null,"seq":1},{"id":8,"slug":"dev-practices","vote-jujhar":"J","vote-lucy":null,"vote-andrew":"A","vote-rajatha":null,"category":"Dev Practices","title":"Documentation","description":"How good are your docs? How trusted are they?","high_score":"Our docs are updated regularly and are accurate","low_score":"Documentation is poor, out of date or non-existant","more_info_link":null,"important":null,"seq":1},{"id":9,"slug":"dev-practices","vote-jujhar":"J","vote-lucy":"L","vote-andrew":"A","vote-rajatha":null,"category":"Dev Practices","title":"QA and Confidence","description":"How easy is it to provide confidence that the changes that are made are correct (technically and functionally)","high_score":"We have multiple assurance steps of differing types run in multiple environments as part of our CI & CD processes","low_score":"\\"We only have basic unit or \\"\\"integration tests\\"\\" in place\\"","more_info_link":null,"important":null,"seq":null},{"id":10,"slug":"dev-practices","vote-jujhar":"J","vote-lucy":"L","vote-andrew":"A","vote-rajatha":null,"category":"Dev Practices","title":"Sensible Defaults","description":"Do you follow sensible defaults/golden path/tech radar","high_score":"We have/know about sensible defaults and we follow them as best we can\\nWe use technology off <org>\'s golden-path/menu","low_score":"We don\'t know about sensible defaults\\nWe often ignore the golden-path","more_info_link":null,"important":null,"seq":null},{"id":11,"slug":"observability","vote-jujhar":null,"vote-lucy":null,"vote-andrew":null,"vote-rajatha":null,"category":"Observability","title":"Feature Toggles Observability","description":"How do we know which feature toggles are active for a deployments?","high_score":"We have a simple UI or API to see what\'s on in which environment","low_score":"We track things manually on paper or in our heads","more_info_link":null,"important":null,"seq":1},{"id":12,"slug":"observability","vote-jujhar":"J","vote-lucy":"L","vote-andrew":"A","vote-rajatha":null,"category":"Observability","title":"Full stack Observability","description":"Do you have multiple views of the entire stack\'s telemetry?","high_score":"We can see through the entire stack from the metal all the way up to the UI issues and performance","low_score":"We can only see one or two layers and don\'t really tie them together to tell a story","more_info_link":"https://devsecops.jujhar.com/observability-strategy/","important":null,"seq":1},{"id":13,"slug":"observability","vote-jujhar":"J","vote-lucy":"L","vote-andrew":null,"vote-rajatha":null,"category":"Observability","title":"Hardware insights","description":"How much insight do we have into the behaviour of our infra/deployment fabric","high_score":"We can tell you the CPU, RAM, NetworkIO & DiskIO for all our hardware in granular detail.  We can enumerate our hardware in detail and know which OS/CPU etc we’re running on","low_score":"We only have very rough measures of our hardware performance","more_info_link":null,"important":null,"seq":1},{"id":14,"slug":"observability","vote-jujhar":"J","vote-lucy":null,"vote-andrew":null,"vote-rajatha":null,"category":"Observability","title":"Logging Working","description":"How do we know that logging is working correctly?","high_score":"We test logging using tests that search for specific log message strings in the central log aggregation/search system","low_score":"We do not test if logging is working","more_info_link":null,"important":null,"seq":1},{"id":15,"slug":"observability","vote-jujhar":"J","vote-lucy":"L","vote-andrew":"A","vote-rajatha":null,"category":"Observability","title":"System Health","description":"How do we know that the system is healthy (or unhealthy)?","high_score":"We query the software using a standard http healthcheck URL and synthetic transactions for key scenarios","low_score":"We wait for checks made manually by another team to tell us if our software is healthy","more_info_link":null,"important":null,"seq":1},{"id":16,"slug":"observability","vote-jujhar":"J","vote-lucy":"L","vote-andrew":null,"vote-rajatha":null,"category":"Observability","title":"Service Status","description":"How do we display the current service/system status to ops teams and business stakeholders","high_score":"We build a dashboard in collaboration with the operations and business teams. UX is a key consideration","low_score":"Operations teams tend to discover the status indicators themselves","more_info_link":null,"important":null,"seq":1},{"id":18,"slug":"deployments","vote-jujhar":"J","vote-lucy":"L","vote-andrew":"A","vote-rajatha":null,"category":"Deployments","title":"CI/CD Speed and Stability","description":"CI/CD processes are fast and stable","high_score":"The CI/CD pipelines are super fast and we get feedback on our software on almost real-time basis","low_score":"CI/CD takes so long to do or is very fragile and we end up losing big chunks of our day to it.","more_info_link":null,"important":null,"seq":1},{"id":19,"slug":"deployments","vote-jujhar":"J","vote-lucy":"L","vote-andrew":"A","vote-rajatha":null,"category":"Deployments","title":"Blue-Green","description":"Any mechanism to test a new version alongside an existing version when necessary","high_score":"We use fine-grained blue-green deployment techniques, at the level of individual services","low_score":"We do not use any blue-green deployment techniques","more_info_link":null,"important":null,"seq":1},{"id":20,"slug":"deployments","vote-jujhar":null,"vote-lucy":null,"vote-andrew":null,"vote-rajatha":null,"category":"Deployments","title":"Idempotency - Redploying the app","description":"What would happen if we decided to redeploy the application even though nothing has changed","high_score":"No worries","low_score":"We don’t know what would happen, the deployments are flakey","more_info_link":null,"important":null,"seq":1},{"id":21,"slug":"deployments","vote-jujhar":null,"vote-lucy":"L","vote-andrew":null,"vote-rajatha":null,"category":"Deployments","title":"Rerun tests","description":"What would happen if we decided to rerun the test suite multiple times","high_score":"No worries","low_score":"We don’t know what would happen, the test suite is flakey","more_info_link":null,"important":null,"seq":1},{"id":22,"slug":"deployments","vote-jujhar":"J","vote-lucy":"L","vote-andrew":null,"vote-rajatha":null,"category":"Deployments","title":"Fresh config","description":"What would happen if we decided to delete the config and redeploy it","high_score":"No worries, the application would behave as it did before","low_score":"It’s very likely the app would behave differently as there’s a lot of manual changes","more_info_link":null,"important":null,"seq":1},{"id":23,"slug":"deployments","vote-jujhar":"J","vote-lucy":"L","vote-andrew":null,"vote-rajatha":null,"category":"Deployments","title":"Automated config","description":"Config should always be performed by an automated process using values from your configuration repository","high_score":"All config is done using scripts","low_score":"Many of our applications are configure manually each time","more_info_link":null,"important":null,"seq":1},{"id":24,"slug":"availability","vote-jujhar":"J","vote-lucy":null,"vote-andrew":null,"vote-rajatha":null,"category":"Availability","title":"MTTR","description":"How long does it take you to restore service in the case of an incident","high_score":"We track our MTTR across the board and can restore in <10 mins on average","low_score":"We measure repair in days and we do not track this properly","more_info_link":"https://en.wikipedia.org/wiki/Mean_time_to_repair","important":null,"seq":1},{"id":25,"slug":"availability","vote-jujhar":"J","vote-lucy":"L","vote-andrew":null,"vote-rajatha":null,"category":"Availability","title":"Service KPIs","description":"How do we track the main service/system Key Performance Indicators (KPIs)? What are the KPIs?","high_score":"We use logging and/or time series metrics to emit service KPIs that are picked up by a dashboard","low_score":"We do not have Service KPIs defined","more_info_link":null,"important":null,"seq":1},{"id":26,"slug":"availability","vote-jujhar":"J","vote-lucy":null,"vote-andrew":null,"vote-rajatha":null,"category":"Availability","title":"Service Restoration","description":"How do we keep things up and running: Can you recover quickly from incidents a low MTTR? Can you detect incidents ahead of time? Can you failover to backup systems","high_score":"We have fully adopted SRE practices across the board. We continuously monitor and improve on your numbers","low_score":"Little to no availability practices","more_info_link":null,"important":null,"seq":1},{"id":27,"slug":"availability","vote-jujhar":null,"vote-lucy":null,"vote-andrew":null,"vote-rajatha":null,"category":"Availability","title":"Observability","description":"How much observability do you have on your systems environments, inputs, outputs and behaviour. Do you have enough information on how your system runs to make improvements/solve problems?","high_score":"Just the basics you get for free from Cloudwatch, an on-server agent, htop, task manager etc.","low_score":"Max Instrumentation and SLO driven dashboards","more_info_link":null,"important":null,"seq":1},{"id":28,"slug":"availability","vote-jujhar":"J","vote-lucy":null,"vote-andrew":null,"vote-rajatha":null,"category":"Availability","title":"Run without you","description":"If all of your team took some time off, how long would your systems keep running without you?","high_score":"Our prod env will run for weeks without interference and self-heal","low_score":"Everything will fall on it\'s face within a day without our heroics","more_info_link":null,"important":null,"seq":1},{"id":30,"slug":"culture","vote-jujhar":null,"vote-lucy":"L","vote-andrew":null,"vote-rajatha":null,"category":"Culture","title":"Path to production","description":"How easy is it to release the software that you work to production","high_score":"It\'s easy and straightforward to release my changes","low_score":"It\'s very difficult to release and takes a long time","more_info_link":null,"important":null,"seq":2},{"id":31,"slug":"culture","vote-jujhar":null,"vote-lucy":"L","vote-andrew":"A","vote-rajatha":null,"category":"Culture","title":"Mission","description":"How well do you know why you are working on things?","high_score":"We have a clear mission that we are with all stakeholders","low_score":"It is rarely clear what our mission is","more_info_link":null,"important":null,"seq":1},{"id":32,"slug":"culture","vote-jujhar":null,"vote-lucy":null,"vote-andrew":null,"vote-rajatha":null,"category":"Culture","title":"Learning","description":"How much do you learn as a team?","high_score":"We learn something every day","low_score":"We rarely learn something new","more_info_link":null,"important":null,"seq":1},{"id":33,"slug":"culture","vote-jujhar":null,"vote-lucy":"L","vote-andrew":null,"vote-rajatha":null,"category":"Culture","title":"Done","description":"Done means released into production and not causing problems","high_score":"Done means that the changes are deployed to prod with monitoring to ensure it has not broken anything","low_score":"Our definition of done is a bit wishy-washy and means “feature tests have passed”","more_info_link":null,"important":null,"seq":1},{"id":34,"slug":"culture","vote-jujhar":null,"vote-lucy":"L","vote-andrew":"A","vote-rajatha":null,"category":"Culture","title":"Collaboration","description":"How do we collaborate on operations aspects of the systems such as logging, monitoring, alerting and NFRs","high_score":"We collaboratee on operational aspects from the very first week of the project","low_score":"We respond after go-live wheen the tickets are raised by the live ops and service teams","more_info_link":null,"important":null,"seq":1},{"id":35,"slug":"culture","vote-jujhar":null,"vote-lucy":null,"vote-andrew":null,"vote-rajatha":null,"category":"Culture","title":"Our tools are cool","description":"Do you feel that your tools, hardware and software are up to scratch","high_score":"We love our tools and can solve any problem with them","low_score":"My machine is so slow and crashes all the time, to install any software I have to submit a ticket","more_info_link":null,"important":null,"seq":1},{"id":36,"slug":"culture","vote-jujhar":"J","vote-lucy":null,"vote-andrew":"A","vote-rajatha":null,"category":"Culture","title":"Onboarding","description":"How easy is it to onboard members to your team and make them productive","high_score":"New team members can spin up a environment quickly and commit to production < 3 weeks","low_score":"It can take a few months before a team member can actively contribute\\n\\nIt takes a long time to discover all the codebases and environments","more_info_link":null,"important":null,"seq":null},{"id":37,"slug":"culture","vote-jujhar":"J","vote-lucy":null,"vote-andrew":null,"vote-rajatha":null,"category":"Culture","title":"What happens in case of failure/incident?","description":null,"high_score":"We work through the situation together.\\nWe discuss the issue in depth\\nWe work out the best way to prevent/mitigate in future","low_score":"We discuss the issue but nothing changes\\nThe person/team could get in trouble or is blamed\\nNo investment is made in paying down tech debt","more_info_link":null,"important":null,"seq":null},{"id":38,"slug":"tech","vote-jujhar":"J","vote-lucy":"L","vote-andrew":"A","vote-rajatha":null,"category":"Tech","title":"Delivery Platform","description":"How effective and easy to use is the delivery platform underpinning your team\'s delivery?","high_score":"The platform is a force multiplier and helps us deliver rapidly and safely. We love the platform.","low_score":"The platform seems to obstruct us and is difficult to use","more_info_link":null,"important":null,"seq":1},{"id":39,"slug":"tech","vote-jujhar":"J","vote-lucy":null,"vote-andrew":null,"vote-rajatha":null,"category":"Tech","title":"Stubs","description":"Simulate external systems. Treat almost every other system as \'external\'","high_score":"The stubs we consume and write are good quality and give us a degree of confidence that our tests are working well.","low_score":"There are few stubs available and we do noot have enough time to write stubs ourselves.","more_info_link":null,"important":null,"seq":1},{"id":40,"slug":"tech","vote-jujhar":"J","vote-lucy":"L","vote-andrew":"A","vote-rajatha":null,"category":"Tech","title":"Call Tracing","description":"How do we trace a call/request end-to-end through the system?","high_score":"We use a standard tracing library to trace calls through the system. Tracing fields are maintained across component boundaries","low_score":"We do not trace calls through the system and have to piece the info together by hand","more_info_link":null,"important":null,"seq":1},{"id":41,"slug":"tech","vote-jujhar":"J","vote-lucy":"L","vote-andrew":"A","vote-rajatha":null,"category":"Tech","title":"Performance","description":"How do we know that the system/service performs within acceptable ranges?","high_score":"We run a set of indicative performances tests within our deployment pipeline that are run on every check-in to version control.","low_score":"We rely solely on the performance team to validate the performance of our application or service.","more_info_link":null,"important":null,"seq":1},{"id":42,"slug":"tech","vote-jujhar":"J","vote-lucy":"L","vote-andrew":null,"vote-rajatha":null,"category":"Tech","title":"Failure Modes","description":"How can we see and share the different known failure modes (failure scenarios) for the system?","high_score":"We use a set of error identifiers to define the failure modes in our software and we use these identifiers in our log messages","low_score":"We do not relaly know how the system might fail","more_info_link":null,"important":null,"seq":1},{"id":43,"slug":"flow","vote-jujhar":null,"vote-lucy":"L","vote-andrew":null,"vote-rajatha":null,"category":"Flow","title":"Failed Changes","description":"What proportion of changes to your application or service in Production fail or need remediation? (This is typically the number of failed deployments)","high_score":"Less than 5% of our changes / deployments fail in Production","low_score":"More than 20% of our changes / deployments fail in Production","more_info_link":null,"important":null,"seq":1},{"id":44,"slug":"flow","vote-jujhar":null,"vote-lucy":null,"vote-andrew":"A","vote-rajatha":null,"category":"Flow","title":"Innovation and Improvements","description":"How well are you able to innovate around delivery approaches?","high_score":"We make our reserve time for innovation and process improvements every week and track changes as part of our team metrics","low_score":"We do not have time to innovate","more_info_link":null,"important":null,"seq":1}]'),t=[];let o={};e.forEach((e=>{o[e.category]={}})),e.forEach((e=>{e.category&&(o[e.category].categoryName=e.category,o[e.category].cards=[])})),e.forEach((e=>{let n=t.filter((t=>t.cardId===e.id));e.moreCardInfo=n,e.category&&(o[e.category].categoryName=e.category,o[e.category].cards.push(e))}));const n=Object.values(o);var a=Object.prototype.toString,r=Array.isArray||function(e){return"[object Array]"===a.call(e)};function i(e){return"function"==typeof e}function l(e){return e.replace(/[\-\[\]{}()*+?.,\\\^$|#\s]/g,"\\$&")}function s(e,t){return null!=e&&"object"==typeof e&&t in e}var c=RegExp.prototype.test,u=/\S/;var d={"&":"&amp;","<":"&lt;",">":"&gt;",'"':"&quot;","'":"&#39;","/":"&#x2F;","`":"&#x60;","=":"&#x3D;"},h=/\s*/,p=/\s+/,v=/\s*=/,y=/\s*\}/,g=/#|\^|\/|>|\{|&|=|!/;function m(e){this.string=e,this.tail=e,this.pos=0}function f(e,t){this.view=e,this.cache={".":this.view},this.parent=t}function w(){this.templateCache={_cache:{},set:function(e,t){this._cache[e]=t},get:function(e){return this._cache[e]},clear:function(){this._cache={}}}}m.prototype.eos=function(){return""===this.tail},m.prototype.scan=function(e){var t=this.tail.match(e);if(!t||0!==t.index)return"";var o=t[0];return this.tail=this.tail.substring(o.length),this.pos+=o.length,o},m.prototype.scanUntil=function(e){var t,o=this.tail.search(e);switch(o){case-1:t=this.tail,this.tail="";break;case 0:t="";break;default:t=this.tail.substring(0,o),this.tail=this.tail.substring(o)}return this.pos+=t.length,t},f.prototype.push=function(e){return new f(e,this)},f.prototype.lookup=function(e){var t,o,n,a=this.cache;if(a.hasOwnProperty(e))t=a[e];else{for(var r,l,c,u=this,d=!1;u;){if(e.indexOf(".")>0)for(r=u.view,l=e.split("."),c=0;null!=r&&c<l.length;)c===l.length-1&&(d=s(r,l[c])||(o=r,n=l[c],null!=o&&"object"!=typeof o&&o.hasOwnProperty&&o.hasOwnProperty(n))),r=r[l[c++]];else r=u.view[e],d=s(u.view,e);if(d){t=r;break}u=u.parent}a[e]=t}return i(t)&&(t=t.call(this.view)),t},w.prototype.clearCache=function(){void 0!==this.templateCache&&this.templateCache.clear()},w.prototype.parse=function(e,t){var o=this.templateCache,n=e+":"+(t||_.tags).join(":"),a=void 0!==o,i=a?o.get(n):void 0;return null==i&&(i=function(e,t){if(!e)return[];var o,n,a,i,s=!1,d=[],f=[],w=[],b=!1,j=!1,k="",W=0;function x(){if(b&&!j)for(;w.length;)delete f[w.pop()];else w=[];b=!1,j=!1}function C(e){if("string"==typeof e&&(e=e.split(p,2)),!r(e)||2!==e.length)throw new Error("Invalid tags: "+e);o=new RegExp(l(e[0])+"\\s*"),n=new RegExp("\\s*"+l(e[1])),a=new RegExp("\\s*"+l("}"+e[1]))}C(t||_.tags);for(var q,I,T,D,L,O,A=new m(e);!A.eos();){if(q=A.pos,T=A.scanUntil(o))for(var E=0,P=T.length;E<P;++E)i=D=T.charAt(E),function(e,t){return c.call(e,t)}(u,i)?(j=!0,s=!0,k+=" "):(w.push(f.length),k+=D),f.push(["text",D,q,q+1]),q+=1,"\n"===D&&(x(),k="",W=0,s=!1);if(!A.scan(o))break;if(b=!0,I=A.scan(g)||"name",A.scan(h),"="===I?(T=A.scanUntil(v),A.scan(v),A.scanUntil(n)):"{"===I?(T=A.scanUntil(a),A.scan(y),A.scanUntil(n),I="&"):T=A.scanUntil(n),!A.scan(n))throw new Error("Unclosed tag at "+A.pos);if(L=">"==I?[I,T,q,A.pos,k,W,s]:[I,T,q,A.pos],W++,f.push(L),"#"===I||"^"===I)d.push(L);else if("/"===I){if(!(O=d.pop()))throw new Error('Unopened section "'+T+'" at '+q);if(O[1]!==T)throw new Error('Unclosed section "'+O[1]+'" at '+q)}else"name"===I||"{"===I||"&"===I?j=!0:"="===I&&C(T)}if(x(),O=d.pop())throw new Error('Unclosed section "'+O[1]+'" at '+A.pos);return function(e){for(var t,o=[],n=o,a=[],r=0,i=e.length;r<i;++r)switch((t=e[r])[0]){case"#":case"^":n.push(t),a.push(t),n=t[4]=[];break;case"/":a.pop()[5]=t[2],n=a.length>0?a[a.length-1][4]:o;break;default:n.push(t)}return o}(function(e){for(var t,o,n=[],a=0,r=e.length;a<r;++a)(t=e[a])&&("text"===t[0]&&o&&"text"===o[0]?(o[1]+=t[1],o[3]=t[3]):(n.push(t),o=t));return n}(f))}(e,t),a&&o.set(n,i)),i},w.prototype.render=function(e,t,o,n){var a=this.getConfigTags(n),r=this.parse(e,a),i=t instanceof f?t:new f(t,void 0);return this.renderTokens(r,i,o,e,n)},w.prototype.renderTokens=function(e,t,o,n,a){for(var r,i,l,s="",c=0,u=e.length;c<u;++c)l=void 0,"#"===(i=(r=e[c])[0])?l=this.renderSection(r,t,o,n,a):"^"===i?l=this.renderInverted(r,t,o,n,a):">"===i?l=this.renderPartial(r,t,o,a):"&"===i?l=this.unescapedValue(r,t):"name"===i?l=this.escapedValue(r,t,a):"text"===i&&(l=this.rawValue(r)),void 0!==l&&(s+=l);return s},w.prototype.renderSection=function(e,t,o,n,a){var l=this,s="",c=t.lookup(e[1]);if(c){if(r(c))for(var u=0,d=c.length;u<d;++u)s+=this.renderTokens(e[4],t.push(c[u]),o,n,a);else if("object"==typeof c||"string"==typeof c||"number"==typeof c)s+=this.renderTokens(e[4],t.push(c),o,n,a);else if(i(c)){if("string"!=typeof n)throw new Error("Cannot use higher-order sections without the original template");null!=(c=c.call(t.view,n.slice(e[3],e[5]),(function(e){return l.render(e,t,o,a)})))&&(s+=c)}else s+=this.renderTokens(e[4],t,o,n,a);return s}},w.prototype.renderInverted=function(e,t,o,n,a){var i=t.lookup(e[1]);if(!i||r(i)&&0===i.length)return this.renderTokens(e[4],t,o,n,a)},w.prototype.indentPartial=function(e,t,o){for(var n=t.replace(/[^ \t]/g,""),a=e.split("\n"),r=0;r<a.length;r++)a[r].length&&(r>0||!o)&&(a[r]=n+a[r]);return a.join("\n")},w.prototype.renderPartial=function(e,t,o,n){if(o){var a=this.getConfigTags(n),r=i(o)?o(e[1]):o[e[1]];if(null!=r){var l=e[6],s=e[5],c=e[4],u=r;0==s&&c&&(u=this.indentPartial(r,c,l));var d=this.parse(u,a);return this.renderTokens(d,t,o,u,n)}}},w.prototype.unescapedValue=function(e,t){var o=t.lookup(e[1]);if(null!=o)return o},w.prototype.escapedValue=function(e,t,o){var n=this.getConfigEscape(o)||_.escape,a=t.lookup(e[1]);if(null!=a)return"number"==typeof a&&n===_.escape?String(a):n(a)},w.prototype.rawValue=function(e){return e[1]},w.prototype.getConfigTags=function(e){return r(e)?e:e&&"object"==typeof e?e.tags:void 0},w.prototype.getConfigEscape=function(e){return e&&"object"==typeof e&&!r(e)?e.escape:void 0};var _={name:"mustache.js",version:"4.2.0",tags:["{{","}}"],clearCache:void 0,escape:void 0,parse:void 0,render:void 0,Scanner:void 0,Context:void 0,Writer:void 0,set templateCache(e){b.templateCache=e},get templateCache(){return b.templateCache}},b=new w;_.clearCache=function(){return b.clearCache()},_.parse=function(e,t){return b.parse(e,t)},_.render=function(e,t,o,n){if("string"!=typeof e)throw new TypeError('Invalid template! Template should be a "string" but "'+(r(a=e)?"array":typeof a)+'" was given as the first argument for mustache#render(template, view, partials)');var a;return b.render(e,t,o,n)},_.escape=function(e){return String(e).replace(/[&<>"'`=\/]/g,(function(e){return d[e]}))},_.Scanner=m,_.Context=f,_.Writer=w;const j=_;var k;document.getElementById("cards-go-here").innerHTML=(k=n,j.render('\n  {{#data}}\n    <div class="category-name" data-category="{{slug}}">\n      <h2 class="display-5">{{{categoryName}}}</h2>\n    </div>\n    {{#cards}}\n    <div class="main-card-container col-md-6 col-lg-3 mb-2">\n      <div class="question-card">\n\n        <div class="card-front {{slug}}">\n          <div class="card-number">{{id}}</div>\n          {{#important}}\n          <span class="card-important"><i class="fas fa-star"></i></span>\n          {{/important}}\n          <h2 data-type="title">{{title}}</h2>\n          <p class="p-2" data-type="description">{{description}}</p>\n          <footer class="card-footer">{{categoryName}}</footer>\n        </div>\n        <div class="card-back scroll">\n          <div class="card-number">{{id}}</div>\n          {{#important}}\n          <span class="card-important"><i class="fas fa-star"></i></span>\n          {{/important}}\n          <h2>{{title}}</h2>\n          <div class="card-score">\n            <p class="card-points high-score">5 points</p>\n            <p>{{high_score}}</p>\n          </div>\n          <div class="card-score ">\n            <p class="card-points low-score">1 point</p>\n            <p>{{low_score}}</p>\n          </div>\n\x3c!--          {{#moreCardInfo}}--\x3e\n\x3c!--          <div>--\x3e\n\x3c!--            <div class="accordion" id="accordionExample">--\x3e\n\x3c!--            <div class="accordion-item">--\x3e\n\x3c!--              <h2 class="accordion-header" id="headingOne">--\x3e\n\x3c!--                <button class="accordion-button" type="button" data-bs-toggle="collapse" data-bs-target="#collapseOne" aria-expanded="true" aria-controls="collapseOne">--\x3e\n\x3c!--                {{title}}--\x3e\n\x3c!--                </button>--\x3e\n\x3c!--              </h2>--\x3e\n\x3c!--              <div id="collapseOne" class="accordion-collapse collapse" aria-labelledby="headingOne" data-bs-parent="#accordionExample">--\x3e\n\x3c!--                <div class="accordion-body">--\x3e\n\x3c!--                  {{description}}--\x3e\n\x3c!--                  {{#url}}<a href="{{url}}">{{url}}</a>{{/url}}--\x3e\n\x3c!--                </div>--\x3e\n\x3c!--              </div>--\x3e\n\x3c!--            </div>--\x3e\n\x3c!--          </div>--\x3e\n\x3c!--        </div>--\x3e\n\x3c!--          {{/moreCardInfo}}--\x3e\n          {{#moreCardInfo}}\n  <button class="accordion">{{title}}</button>\n  <div class="panel"><p>{{description}}</p>\n  <p>{{#url}}<a href="{{url}}">{{url}}</a>{{/url}}</p>\n  </div>\n          {{/moreCardInfo}}\n\n        </div>\n      </div>\n    </div>\n    {{/cards}}\n  {{/data}}\n  ',{data:k}));const W=document.getElementsByClassName("card-number");Object.values(W).forEach((e=>{e.addEventListener("click",(()=>{e.parentElement.parentElement.classList.toggle("flipCard")}))})),setTimeout((()=>{const e=document.getElementById("page-title"),t=document.createElement("marquee");e.parentNode.insertBefore(t,e),t.appendChild(e)}),7e3);let x,C=document.getElementsByClassName("accordion");for(x=0;x<C.length;x++)C[x].addEventListener("click",(function(){this.classList.toggle("active");let e=this.nextElementSibling;"block"===e.style.display?e.style.display="none":e.style.display="block"}))})();